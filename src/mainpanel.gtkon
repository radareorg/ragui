/* ragui - copyright(C) 2009-2011 - pancake<nopcode.org> */

VBox using=Gtk $Ragui.MainPanel {
	Label label="";
	HBox {
		Label label="";
		VBox {
			Label label="";
			Label !expand label="Editor";
			Button !expand label="Open file" activate=onOpenFile released=onOpenFile;
			Button !expand label="Open program" activate=onOpenProgram released=onOpenProgram;
			Button !expand label="Open project" activate=onOpenProject released=onOpenProject;
		}
		Label label="";
		VBox {
			Label label="";
			Label !expand label="Debugger";
			Button !expand label="Debug local program" activate=onDebugProgram released=onDebugProgram;
			Button !expand label="Attach to process" activate=onDebugAttach released=onDebugAttach;
			Button !expand label="Remote debugger" activate=onDebugRemote released=onDebugRemote;
		}
		Label label="";
	}
	Label label="";
	HBox {
		Label label="";
		VBox {
			Label !expand label="Diffing";
			Button !expand label="Diff files";
			Button !expand label="Diff programs";
			Button !expand label="Diff projects";
			Label label="";
		}
		Label label="";
		VBox {
			Label !expand label="Help";
			// lambda required to match signature
			Button !expand label="API documentation" released="{onHelpAPI();}";
			Button !expand label="About this program" released="{onHelpAbout();}";
			Label label="";
		}
		Label label="";
	}
	Label label="";
-{
	public signal void onHelpAPI ();
	public signal void onHelpAbout ();

	enum OpenType {
		FILE,
		PROGRAM,
		PROJECT
	}

	private void handle_open (Dialog w, FileChooser fc, OpenType type) {
		int ret = 0;
		w.border_width = 6;
		fc.file_activated.connect ((fc) => {
			w.response (1);
		});
		do {
			w.show_all ();
			ret = w.run ();
		} while (ret == -1);
		w.hide ();
		w = null;
		if (ret == 1) {
			var filename = fc.get_filename ();
			switch (type) {
			case OpenType.FILE:
				if (!open_file (filename, false))
					gc.show_error (@"Cannot open file $filename\n");
				break;
			case OpenType.PROGRAM:
				if (!open_file (filename, true))
					gc.show_error (@"Cannot open file $filename\n");
				break;
			case OpenType.PROJECT:
				var file = gc.core.project_info (filename);
				if (open_file (file, false)) {
					gc.core.bin_load (null);
					gc.prjfile = filename;
					gc.core.project_open (filename);
				} else gc.show_error (@"Cannot open $file");
				break;
			}
		}
	}

	public void onOpenProgram () {
		var w = new Dialog.with_buttons ("Open program",
				gc.window, DialogFlags.MODAL,
				"autodetect", -1,
				"gtk-cancel", 0,
				"gtk-ok", 1
			);
		var op = new OpenProgram ();
		w.vbox.add (op);
		handle_open (w, op.fc, OpenType.PROGRAM);
		op.set_config ();
	}

	public void onOpenFile () {
		var w = new Dialog.with_buttons ("Open file",
				gc.window, DialogFlags.MODAL,
				"gtk-cancel", 0,
				"gtk-ok", 1
			);
		var of = new OpenFile ();
		w.vbox.add (of);
		w.resize (600, 400);
		handle_open (w, of.fc, OpenType.FILE);
	}

	public void onOpenProject () {
		var w = new Dialog.with_buttons ("Open project",
				gc.window, DialogFlags.MODAL,
				"gtk-cancel", 0,
				"gtk-ok", 1
			);
		w.resize (600, 400);
		var prjdir = Environment.get_home_dir () + "/.radare2/rdb";
		var of = new OpenProject (prjdir);
		w.vbox.add (of);
		handle_open (w, of.fc, OpenType.PROJECT);
	}

	public void onDebugProgram() {
		int ret = 0;
		var w = new Dialog.with_buttons ("Open program to debug",
				gc.window, DialogFlags.MODAL,
				"gtk-cancel", 0,
				"gtk-ok", 1
			);
		w.resize (600, 400);
		var of = new OpenProgram ();
		do {
			w.vbox.add (of);
			w.show_all ();
			ret = w.run ();
		} while (ret == -1);
		w.hide ();
		w = null;
		if (ret == 1) {
			gc.set_debugger (true);
			open_file ("dbg://"+of.fc.get_filename (), true);
			gc.core.dbg.use ("native");
		}
	}

	public void onDebugRemote() {
		int ret = 0;
		var w = new Dialog.with_buttons ("Open remote debug",
				gc.window, DialogFlags.MODAL,
				"gtk-cancel", 0,
				"gtk-ok", 1
			);
		w.resize (600, 400);
		var of = new OpenRemote ();
		do {
			w.vbox.add (of);
			w.show_all ();
			ret = w.run ();
		} while (ret == -1);
		w.hide ();
		w = null;
		if (ret == 1) {
			gc.set_debugger (true);
			open_file (of.get_url (), true);
			gc.core.dbg.use ("gdb"); // XXX: or rap://
		}
	}

	public void onDebugAttach() {
		int ret = 0;
		var w = new Dialog.with_buttons ("Attach to process",
				gc.window, DialogFlags.MODAL,
				"gtk-cancel", 0,
				"gtk-ok", 1
			);
		w.resize (600, 400);
		var of = new OpenProcess ();
		do {
			w.vbox.add (of);
			w.show_all ();
			ret = w.run ();
		} while (ret == -1);
		w.hide ();
		w = null;
		if (ret == 1) {
			// TODO: setup all that debug shit
			gc.set_debugger (true);
			open_file ("attach://%d".printf (of.get_pid ()), false);
			gc.core.dbg.use ("native");
		}
	}

	public signal bool open_file(string file, bool analyze);
}-
}
