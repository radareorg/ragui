VBox $Mounts.Widget using=Gtk border-width=5
		using:Radare="Radare" 
		using:Listview="Listview" {
	HBox !expand spacing=3 {
		ComboBox !expand $fstype text;
		Entry $mountpoint;
		Entry $offset;
		Button !expand label=mount clicked=do_mount;
//		Button !expand label=umount clicked=do_umount;
	}
	VPaned position=200 {
		Listview:Widget $listview;
		Listview:Widget $dirs add2;
	}
-{
	public RFS *fs = null;

	public Widget() { //RFS fsystem) {
print ("Setting fsystem pointer to : %p\n", fs);
		fstype.append_text ("cpio");
		fstype.append_text ("ext2");
		fstype.append_text ("fat");
		fstype.append_text ("fb");
		fstype.append_text ("hfs");
		fstype.append_text ("hfsplus");
		fstype.append_text ("iso9660");
		fstype.append_text ("jfs");
		fstype.append_text ("minix");
		fstype.append_text ("ntfs");
		fstype.append_text ("posix");
		fstype.append_text ("reiserfs");
		fstype.append_text ("sfs");
		fstype.append_text ("tar");
		fstype.append_text ("udf");
		fstype.append_text ("ufs");
		fstype.append_text ("xfs");
		fstype.set_active (0);
		mountpoint.text = "/";
		offset.text = "0";
		listview.set_actions ("Show", "Umount");
		listview.menu_handler.connect ((action, row) => {
			if (fs == null) {
				stderr.printf ("Oops: fs is null\n");
				return;
			}
			switch (action) {
			case "Show":
				var dirs = fs->dir (row.name);
				if (dirs.length () > 0) {
					foreach (var file in dirs) {
						print (@"$(file.name) ($(file.size))");
					}
				} else print (@"Directory $(row.name) is empty!");
				break;
			case "Umount":
				print (@"Umount $(row.name)\n");
				do_umount (row.name);
				break;
			}
		});
	}

	//TODO: Dont mount twice same path
	public void do_mount () {
		fs->mount (fstype.get_active_text (), mountpoint.text, uint64.parse (offset.text));
		update_list ();
	}

	public void update_list () {
		listview.clear ();
		foreach (var root in fs->roots) {
			print (@"MOUNT ($(root.delta)) ($(root.path))\n");
			listview.add_row (root.delta, root.path);
		}
	}

	public void do_umount (string path) {
		fs->umount (path);
		update_list ();
	}
}-
}
