/* gcode - Copyright(C) 2009-2010 - nibble<develsec.org> */

HBox using=Gtk $Gcode.Widget {
	ScrolledWindow can-focus hscrollbar-policy="{PolicyType.AUTOMATIC}" $.scroll {
		TextView can-focus !editable $.code;
	}
-{
	public signal void data_handler(bool down);
	private Adjustment vadj;
	private int maxlines;
	private TextTag couriertag;
	private TextTag bluetag;
	private TextTag undertag;

	public Widget() {
		vadj = scroll.get_vadjustment();
		vadj.value_changed.connect (scroll_change);
		couriertag = code.buffer.create_tag ("font", "font", "courier", "size", "8");
		bluetag = code.buffer.create_tag ("blue", "foreground", "blue");
		undertag = code.buffer.create_tag ("ul", "underline-set", "True", "underline", "low");
	}

	private void scroll_change() {
		var adjvalue = vadj.get_value ();
		if (adjvalue == 0)
			data_handler (false);
		else if (adjvalue + vadj.get_page_size () == vadj.get_upper ())
			data_handler (true);
	}


	public void set_text(string str) {
		Gtk.TextIter ei; 
		Gtk.TextMark im;
		code.buffer.get_end_iter (out ei); 
		//code.buffer.insert (ei, str, -1);
		var strs = str.split ("\n");
		foreach (var s in strs) {
			if (s.str ("mov") != null)
				code.buffer.insert_with_tags (ei, s, -1, couriertag, bluetag, undertag);
			else code.buffer.insert_with_tags (ei, s, -1, couriertag);
			code.buffer.insert (ei, "\n", -1);
		//code.buffer.insert_with_tags (ei, str, -1, couriertag, bluetag, undertag);
		}
		/* Autoscroll */
		code.buffer.get_end_iter (out ei); 
		im = code.buffer.get_insert (); 
		code.buffer.place_cursor (ei); 
		code.scroll_to_mark (im, 0.0, true, 0.0, 1.0);
	}

	public void set_maxlines(int l) {
		maxlines = l;
	}
}-
}
