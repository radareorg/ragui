/* ragui - copyright(C) 2010 - pancake<nopcode.org> */
VBox using=Gtk $Script.Widget construct=init() {
	HBox !expand {
		ComboBox text $cb !expand;
		Label label=" file:" !expand;
		Entry text="" $filename;
		Button label="new" !expand activate=click_new released=click_new;
		Button label="load" !expand activate=click_load released=click_load;
		Button label="save" !expand activate=click_save released=click_save;
		Label label="  " !expand;
		Button label="run" !expand activate=click_run released=click_run;
	}
	TextView $tv;
-{
	private void click_new () {
		tv.buffer.text = "";
		init ();
		file = null;
	}

	private void click_load () {
		var f = gc.show_file_open ("Open script file..", null);
		if (f == null)
			return;
		tv.buffer.text = gc.slurp (f);
		if (f == null) {
			gc.show_error ("Cannot read file");
			return;
		}
		file = f;
		var ext = f[f.length-3:f.length];
		switch (ext) {
		case ".py":
			set_language ("python");
			break;
		case ".rb":
			set_language ("ruby");
			break;
		case "lua":
			set_language ("lua");
			break;
		default:	
			set_language ("radare");
			break;
		}
	}

	private void click_save () {
		var f = gc.show_file_open ("Save script file", null);
		gc.show_error ("TODO: save");
	}

	private void click_run () {
		var lang = get_language ();
		var text = tv.buffer.text;

		if (lang != "radare") // XXX: TODO: remove, radare scripts also need to be saved?
			if (file == null)
				click_save ();

		switch (lang) {
		case "radare":
			foreach (var line in text.split ("\n"))
				gc.cmd (line);
			break;
		default:
			gc.cmd (@"#!$lang $file");
			break;
		}
		gc.show_error ("TODO: run");
		gc.cmd ("");
	}

	private void set_language (string file) {
		// TODO
	}

	private string get_language () {
		var model = cb.get_model ();
		TreeIter ti;
		cb.get_active_iter (out ti);
		Value val;
		model.get_value (ti, 0, out val);
		return (string)val;
	}

	string? file = null;

	private void init () {
		// TODO: generate this list by using the plugin API
		cb.append_text ("radare");
		cb.append_text ("python");
		cb.append_text ("perl");
		cb.append_text ("ruby");
		cb.append_text ("lua");
		cb.append_text ("go");
		cb.set_active (0);
		cb.show_all ();
	}
}-
}
